This syntax is a slice assignment. A slice of [:] means the entire list. The difference between nums[:] = and nums = is that the latter doesn't replace elements in the original list. This is observable when there are two references to the list

>>> a = list(range(10))
>>> b = a
>>> a[:] = [0, 0, 0] # changes when a and b both refer to
>>> b
[0, 0, 0]
To see the difference just remove the [:] from the above sequence.

>>> a = list(range(10))
>>> b = a
>>> a = [0, 0, 0] # a now refers to a different list than b
>>> b
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
To take the title of your question literally, if list is a variable name and not the builtin, it will replace the length of the sequence with an ellipsis

>>> list = [1,2,3,4]
>>> list[:] = [...]
>>> list
[Ellipsis]
